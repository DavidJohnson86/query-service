[tool.poetry]
name = "query_service"
version = "0.1.0"
description = ""
authors = ["szuro <szuroveczdavid@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<=3.12"
black = "^23.9.1"
ruff = "^0.0.291"
pre-commit = "^3.4.0"
fastapi = "^0.103.1"
pydantic = "^2.4.2"
requests = "^2.31.0"
numpy = "^1.26.1"
pandas = "^2.1.3"
nox = "^2023.4.22"
hypercorn = "^0.15.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# See https://beta.ruff.rs/docs/rules/ for details
select = [
    "F",   # Pyflakes, included in default
    "E",
    "W",   # pycodestyles errors and warnings
    "I",   # sorting
    "ANN", # force annotations
    "C",
    "C4",
    "EM",
    "COM",
    "ISC", # flake8 rules
    "ICN",
    "G",
    "INP",
    "Q",
    "PIE",
    "PYI",
    "T20",
    "BLE",
    "ARG",
    "TID",
    "SLF",
    "N",
    "RET",
    "RSE",
    "ERA",
    "PL",  # pylint
]
ignore = ["ANN401", "ANN101", "G004", "ANN102"]
unfixable = []
extend-exclude = [
    ".nox",
    ".pytest_cache",
    ".ruff_cache",
    "test-results",
    ".venv",
    "build",
    "dist",
    "temp",
    ".coverage",
    "noxfile.py",
]


# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = "py311"

[tool.black]
line-length = 120
target-version = ['py311']


[virtualenvs]
create = true
in-project = true